{"version":3,"sources":["components/CurrentReservations.jsx","components/LogIn.jsx","components/AppointmentInfo.jsx","components/Schedule.jsx","App.js","index.js"],"names":["Reservations","reservations","setReservations","columns","field","headerName","width","renderCell","reservationId","id","Button","variant","color","size","onClick","evt","filter","reservation","reservation_id","fetch","method","headers","then","response","json","responseJson","console","log","deleteReservation","rows","map","reservationTime","Date","start_time","toLocaleString","cancelReservation","style","autoHeight","isRowSelectable","CurrentReservations","username","history","useHistory","useState","push","useEffect","data","Container","component","maxWidth","length","Typography","LogIn","props","currentUsername","setCurrentUsername","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","target","value","type","event","preventDefault","setUsername","AppointmentInfo","appointments","params","startTime","JSON","stringify","body","ok","Error","catch","error","makeReservation","appointmentTime","Number","appointmentInfo","schedule","Schedule","setStartTime","endTime","setEndTime","availableAppointments","setAvailableAppointments","classes","makeStyles","theme","justifyContent","submitBtn","backgroundColor","borderColor","boxShadow","useStyles","LocalizationProvider","dateAdapter","DateAdapter","Grid","container","direction","alignItems","spacing","item","className","htmlFor","DateTimePicker","renderInput","time","minDate","startOfDay","dateString","createTheme","palette","primary","main","secondary","green","App","appBar","marginBottom","icon","marginRight","title","flexGrow","ThemeProvider","CssBaseline","AppBar","position","Toolbar","noWrap","to","RouterLink","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75194d6a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Button, Container, Typography } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useHistory } from \"react-router\";\n\nfunction Reservations({ reservations, setReservations }) {\n  function deleteReservation(reservationId) {\n    // remove the reservation so it is no longer displayed\n    setReservations((reservations) => {\n      return reservations.filter(\n        (reservation) => reservation.reservation_id !== reservationId\n      );\n    });\n    fetch(`/api/reservations/${reservationId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(responseJson);\n      });\n  }\n\n  const columns = [\n    { field: \"reservationTime\", headerName: \"Reservation Info\", width: 400 },\n    {\n      field: \"cancelReservation\",\n      headerName: \"Cancel Reservation\",\n      width: 400,\n      renderCell: ({ id: reservationId }) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={(evt) => deleteReservation(reservationId)}\n        >\n          Cancel Reservation\n        </Button>\n      ),\n    },\n  ];\n\n  const rows = reservations.map((reservation) => ({\n    id: reservation.reservation_id,\n    reservationTime: new Date(reservation.start_time).toLocaleString(),\n    cancelReservation: reservation.reservation_id,\n  }));\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <DataGrid\n        autoHeight={true}\n        rows={rows}\n        columns={columns}\n        isRowSelectable={false}\n      />\n    </div>\n  );\n}\n\nexport default function CurrentReservations({ username }) {\n  const history = useHistory();\n  const [reservations, setReservations] = useState([]);\n\n  if (!username) {\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    fetch(`/api/user/${username}/reservations/`)\n      .then((response) => response.json())\n      .then((data) => setReservations(data));\n  }, [username]);\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      {reservations.length === 0 ? (\n        <Typography component=\"h1\" variant=\"h5\">\n          No reservations yet. Make one!\n        </Typography>\n      ) : (\n        <>\n          <Typography component=\"h1\" variant=\"h5\">\n            Your reservations:\n          </Typography>\n          <Reservations\n            reservations={reservations}\n            setReservations={setReservations}\n          />\n        </>\n      )}\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nexport default function LogIn(props) {\n  const history = useHistory();\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n\n  function loginUser(event) {\n    event.preventDefault();\n    props.setUsername(currentUsername);\n    history.push(\"/schedule\");\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoFocus\n            onChange={(evt) => setCurrentUsername(evt.target.value)}\n            value={currentUsername}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={loginUser}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import \"date-fns\";\n// import { startOfDay } from \"date-fns\";\nimport { Button } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import DateAdapter from \"@mui/lab/AdapterDateFns\";\n// import TextField from \"@mui/material/TextField\";\n// import { DatePicker, LocalizationProvider, TimePicker } from \"@mui/lab\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nexport default function AppointmentInfo({ appointments, username }) {\n  function makeReservation(startTime) {\n    const data = JSON.stringify({ startTime, username });\n    fetch(\"/api/reservations/book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  const columns = [\n    { field: \"appointmentInfo\", headerName: \"Appointment Info\", width: 400 },\n    {\n      field: \"schedule\",\n      headerName: \"Make Reservation\",\n      width: 400,\n      renderCell: (params) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => makeReservation(params.value)}\n        >\n          Make Reservation\n        </Button>\n      ),\n    },\n  ];\n\n  const rows = appointments.map((appointmentTime) => ({\n    id: Number(appointmentTime),\n    appointmentInfo: appointmentTime.toLocaleString(),\n    schedule: appointmentTime,\n  }));\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <DataGrid\n        autoHeight={true}\n        rows={rows}\n        columns={columns}\n        isRowSelectable={false}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"date-fns\";\nimport { startOfDay } from \"date-fns\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport { DateTimePicker, LocalizationProvider } from \"@mui/lab\";\nimport AppointmentInfo from \"./AppointmentInfo\";\n\nexport default function Schedule({ username }) {\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [availableAppointments, setAvailableAppointments] = useState([]);\n  const useStyles = makeStyles((theme) => ({\n    label: {\n      justifyContent: \"left\",\n    },\n    submitBtn: {\n      backgroundColor: \"#00745d\",\n      color: \"white\",\n      \"&:hover\": {\n        backgroundColor: \"#015041\",\n        borderColor: \"#54ffde\",\n        boxShadow: \"none\",\n      },\n    },\n  }));\n\n  function onSubmit() {\n    const data = JSON.stringify({ startTime, endTime });\n    fetch(\"/api/reservations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setAvailableAppointments(\n          data.map((dateString) => new Date(dateString))\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n  const classes = useStyles();\n\n  const history = useHistory();\n  if (!username) {\n    history.push(\"/login\");\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={4}\n        >\n          <Grid item className={classes.label} htmlFor=\"date-picker-dialog\">\n            Pick a date for your reservation:\n          </Grid>\n          <Grid container direction=\"row\" spacing={3} justifyContent=\"center\">\n            <Grid item>\n              <DateTimePicker\n                renderInput={(props) => <TextField {...props} />}\n                label=\"DateTimePicker\"\n                value={startTime}\n                onChange={(time) => setStartTime(time)}\n                minDate={startOfDay(new Date())}\n              />\n            </Grid>\n            <Grid item>\n              <DateTimePicker\n                renderInput={(props) => <TextField {...props} />}\n                label=\"DateTimePicker\"\n                value={endTime}\n                onChange={(time) => setEndTime(time)}\n                minDate={startOfDay(new Date())}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.submitBtn}\n              onClick={onSubmit}\n            >\n              Search for reservations\n            </Button>\n          </Grid>\n        </Grid>\n        {availableAppointments.length > 0 && (\n          <AppointmentInfo\n            appointments={availableAppointments}\n            username={username}\n          />\n        )}\n      </LocalizationProvider>\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { Switch, Route, Link as RouterLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport green from \"@material-ui/core/colors/green\";\nimport { useHistory } from \"react-router\";\nimport CurrentReservations from \"./components/CurrentReservations\";\nimport LogIn from \"./components/LogIn\";\nimport Schedule from \"./components/Schedule\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ffa177\",\n    },\n    secondary: {\n      main: green[\"A100\"],\n    },\n  },\n});\n\nfunction App() {\n  const history = useHistory();\n  const [username, setUsername] = useState();\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      marginBottom: theme.spacing(2),\n    },\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n  if (!username) {\n    history.push(\"/login\");\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <ScheduleIcon className={classes.icon} />\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Melon Tasting Scheduler\n          </Typography>\n          <Button to=\"/schedule\" component={RouterLink} color=\"inherit\">\n            Schedule Tasting\n          </Button>\n          <Button to=\"/current_reservations\" component={RouterLink} color=\"inherit\">\n            Current Reservations\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route path=\"/schedule\">\n          <Schedule username={username} />\n        </Route>\n        <Route path=\"/current_reservations\">\n          <CurrentReservations username={username} />\n        </Route>\n        <Route path=\"/login\">\n          <LogIn setUsername={setUsername} />\n        </Route>\n        <>\n          <Typography variant=\"h3\">Welcome, {username}!</Typography>\n        </>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}