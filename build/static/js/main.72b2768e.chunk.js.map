{"version":3,"sources":["components/Schedule.jsx","App.js","index.js"],"names":["Schedule","useState","Date","selectedDate","setSelectedDate","startTime","setStartTime","endTime","setEndTime","classes","makeStyles","theme","label","justifyContent","submitBtn","backgroundColor","color","borderColor","boxShadow","useStyles","Container","maxWidth","utils","DateFnsUtils","Grid","container","direction","alignItems","className","htmlFor","margin","id","format","value","onChange","date","KeyboardButtonProps","minDate","startOfDay","variant","time","Button","toDateString","toTimeString","createTheme","palette","primary","main","secondary","green","App","appBar","marginBottom","spacing","icon","marginRight","title","flexGrow","ThemeProvider","CssBaseline","AppBar","position","Toolbar","Typography","noWrap","to","component","RouterLink","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+aAYe,SAASA,IAAY,IAAD,EACOC,mBAAS,IAAIC,MADpB,mBAC1BC,EAD0B,KACZC,EADY,OAECH,mBAAS,IAAIC,MAFd,mBAE1BG,EAF0B,KAEfC,EAFe,OAGHL,mBAAS,IAAIC,MAHV,mBAG1BK,EAH0B,KAGjBC,EAHiB,KAmB3BC,EAfYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,eAAgB,QAElBC,UAAW,CACTC,gBAAiB,UACjBC,MAAO,QACP,UAAW,CACTD,gBAAiB,UACjBE,YAAa,UACbC,UAAW,YAKDC,GAChB,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC,IAAD,CAAyBC,MAAOC,IAAhC,UACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVb,eAAe,SACfc,WAAW,aAJb,UAME,qBAAKC,UAAWnB,EAAQG,MAAOiB,QAAQ,qBAAvC,+CAGA,cAAC,IAAD,CACEC,OAAO,SACPC,GAAG,qBACHnB,MAAM,qBACNoB,OAAO,aACPC,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAU/B,EAAgB+B,IACpCC,oBAAqB,CACnB,aAAc,eAEhBC,QAASC,YAAW,IAAIpC,MACxBqC,QAAQ,WAEV,cAAC,IAAD,CACET,OAAO,SACPC,GAAG,cACHnB,MAAM,aACNqB,MAAO5B,EACP6B,SAAU,SAACM,GAAD,OAAUlC,EAAakC,IACjCJ,oBAAqB,CACnB,aAAc,uBAGlB,cAAC,IAAD,CACEN,OAAO,SACPC,GAAG,cACHnB,MAAM,WACNqB,MAAO1B,EACP2B,SAAU,SAACM,GAAD,OAAUhC,EAAWgC,IAC/BJ,oBAAqB,CACnB,aAAc,qBAGlB,cAACK,EAAA,EAAD,CAAQF,QAAQ,YAAYX,UAAWnB,EAAQK,UAA/C,wCAIF,gCACE,gDAAmBX,EAAauC,kBAChC,uCACSrC,EAAUsC,eADnB,SACoCpC,EAAQoC,0BC7DtD,IAAMhC,EAAQiC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAME,IAAK,SAkDFC,MA7Cf,WACE,IAYMzC,EAZYC,aAAW,SAACC,GAAD,MAAY,CACvCwC,OAAQ,CACNC,aAAczC,EAAM0C,QAAQ,IAE9BC,KAAM,CACJC,YAAa5C,EAAM0C,QAAQ,IAE7BG,MAAO,CACLC,SAAU,MAIEtC,GAEhB,OACE,cAACuC,EAAA,EAAD,CAAe/C,MAAOA,EAAtB,SACE,eAAC,IAAD,WACE,cAACgD,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASjC,UAAWnB,EAAQ0C,OAA7C,SACE,eAACW,EAAA,EAAD,WACE,cAAC,IAAD,CAAclC,UAAWnB,EAAQ6C,OACjC,cAACS,EAAA,EAAD,CACExB,QAAQ,KACRvB,MAAM,UACNgD,QAAM,EACNpC,UAAWnB,EAAQ+C,MAJrB,qCAQA,cAACf,EAAA,EAAD,CAAQwB,GAAG,YAAYC,UAAWC,IAAYnD,MAAM,UAApD,mCAKJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOoD,KAAK,YAAZ,SACE,cAAC,EAAD,cClEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72b2768e.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"date-fns\";\nimport { startOfDay } from \"date-fns\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nexport default function Schedule() {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const useStyles = makeStyles((theme) => ({\n    label: {\n      justifyContent: \"left\",\n    },\n    submitBtn: {\n      backgroundColor: \"#00745d\",\n      color: \"white\",\n      \"&:hover\": {\n        backgroundColor: \"#015041\",\n        borderColor: \"#54ffde\",\n        boxShadow: \"none\",\n      },\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"lg\">\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <div className={classes.label} htmlFor=\"date-picker-dialog\">\n            Pick a date for your reservation:\n          </div>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Date picker dialog\"\n            format=\"MM/dd/yyyy\"\n            value={selectedDate}\n            onChange={(date) => setSelectedDate(date)}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n            minDate={startOfDay(new Date())}\n            variant=\"static\"\n          />\n          <KeyboardTimePicker\n            margin=\"normal\"\n            id=\"time-picker\"\n            label=\"Start time\"\n            value={startTime}\n            onChange={(time) => setStartTime(time)}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change start time\",\n            }}\n          />\n          <KeyboardTimePicker\n            margin=\"normal\"\n            id=\"time-picker\"\n            label=\"End time\"\n            value={endTime}\n            onChange={(time) => setEndTime(time)}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change end time\",\n            }}\n          />\n          <Button variant=\"contained\" className={classes.submitBtn}>\n            Search for reservations\n          </Button>\n        </Grid>\n        <div>\n          <p>Selected date: {selectedDate.toDateString()}</p>\n          <p>\n            Time: {startTime.toTimeString()}â€“{endTime.toTimeString()}\n          </p>\n        </div>\n      </MuiPickersUtilsProvider>\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport green from \"@material-ui/core/colors/green\";\nimport Schedule from \"./components/Schedule\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#ffa177',\n    },\n    secondary: {\n      main: green[\"A100\"],\n    },\n  },\n});\n\nfunction App() {\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      marginBottom: theme.spacing(2),\n    },\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <ScheduleIcon className={classes.icon} />\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Melon Tasting Scheduler\n            </Typography>\n            <Button to=\"/schedule\" component={RouterLink} color=\"inherit\">\n              Schedule Tasting\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route path=\"/schedule\">\n            <Schedule />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}