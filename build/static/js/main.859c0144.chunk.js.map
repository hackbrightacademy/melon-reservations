{"version":3,"sources":["components/AppointmentInfo.jsx","components/Schedule.jsx","components/LogIn.jsx","App.js","index.js"],"names":["AppointmentInfo","appointments","username","columns","field","headerName","width","renderCell","params","Button","variant","color","size","onClick","startTime","data","JSON","stringify","fetch","method","headers","body","then","response","ok","Error","json","responseJson","console","log","catch","error","makeReservation","value","rows","map","appointmentTime","id","Number","appointmentInfo","toLocaleString","schedule","style","autoHeight","isRowSelectable","Schedule","useState","Date","setStartTime","endTime","setEndTime","availableAppointments","setAvailableAppointments","classes","makeStyles","theme","label","justifyContent","submitBtn","backgroundColor","borderColor","boxShadow","useStyles","history","useHistory","push","Container","maxWidth","LocalizationProvider","dateAdapter","DateAdapter","Grid","container","direction","alignItems","spacing","item","className","htmlFor","DateTimePicker","renderInput","props","TextField","onChange","time","minDate","startOfDay","dateString","length","LogIn","currentUsername","setCurrentUsername","component","Typography","noValidate","margin","required","fullWidth","name","autoFocus","evt","target","type","event","preventDefault","setUsername","createTheme","palette","primary","main","secondary","green","App","appBar","marginBottom","icon","marginRight","title","flexGrow","ThemeProvider","CssBaseline","AppBar","position","Toolbar","noWrap","to","RouterLink","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.859c0144.chunk.js","sourcesContent":["// import { useState } from \"react\";\n// import { useHistory } from \"react-router\";\n// import \"date-fns\";\n// import { startOfDay } from \"date-fns\";\nimport { Button } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import DateAdapter from \"@mui/lab/AdapterDateFns\";\n// import TextField from \"@mui/material/TextField\";\n// import { DatePicker, LocalizationProvider, TimePicker } from \"@mui/lab\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nexport default function AppointmentInfo({ appointments, username }) {\n  function makeReservation(startTime) {\n    const data = JSON.stringify({ startTime, username });\n    fetch(\"/api/reservations/book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  const columns = [\n    { field: \"appointmentInfo\", headerName: \"Appointment Info\", width: 400 },\n    {\n      field: \"schedule\",\n      headerName: \"Make Reservation\",\n      width: 400,\n      renderCell: (params) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => makeReservation(params.value)}\n        >\n          Make Reservation\n        </Button>\n      ),\n    },\n  ];\n\n  const rows = appointments.map((appointmentTime) => ({\n    id: Number(appointmentTime),\n    appointmentInfo: appointmentTime.toLocaleString(),\n    schedule: appointmentTime,\n  }));\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <DataGrid\n        autoHeight={true}\n        rows={rows}\n        columns={columns}\n        isRowSelectable={false}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"date-fns\";\nimport { startOfDay } from \"date-fns\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport TextField from \"@mui/material/TextField\";\nimport { DateTimePicker, LocalizationProvider } from \"@mui/lab\";\nimport AppointmentInfo from \"./AppointmentInfo\";\n\nexport default function Schedule({ username }) {\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [availableAppointments, setAvailableAppointments] = useState([]);\n  const useStyles = makeStyles((theme) => ({\n    label: {\n      justifyContent: \"left\",\n    },\n    submitBtn: {\n      backgroundColor: \"#00745d\",\n      color: \"white\",\n      \"&:hover\": {\n        backgroundColor: \"#015041\",\n        borderColor: \"#54ffde\",\n        boxShadow: \"none\",\n      },\n    },\n  }));\n\n  function onSubmit() {\n    const data = JSON.stringify({ startTime, endTime });\n    fetch(\"/api/reservations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setAvailableAppointments(\n          data.map((dateString) => new Date(dateString))\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n  const classes = useStyles();\n\n  const history = useHistory();\n  if (!username) {\n    history.push(\"/login\");\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={4}\n        >\n          <Grid item className={classes.label} htmlFor=\"date-picker-dialog\">\n            Pick a date for your reservation:\n          </Grid>\n          <Grid container direction=\"row\" spacing={3} justifyContent=\"center\">\n            <Grid item>\n              <DateTimePicker\n                renderInput={(props) => <TextField {...props} />}\n                label=\"DateTimePicker\"\n                value={startTime}\n                onChange={(time) => setStartTime(time)}\n                minDate={startOfDay(new Date())}\n              />\n            </Grid>\n            <Grid item>\n              <DateTimePicker\n                renderInput={(props) => <TextField {...props} />}\n                label=\"DateTimePicker\"\n                value={endTime}\n                onChange={(time) => setEndTime(time)}\n                minDate={startOfDay(new Date())}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.submitBtn}\n              onClick={onSubmit}\n            >\n              Search for reservations\n            </Button>\n          </Grid>\n        </Grid>\n        {availableAppointments.length > 0 && (\n          <AppointmentInfo\n            appointments={availableAppointments}\n            username={username}\n          />\n        )}\n      </LocalizationProvider>\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\n\nexport default function LogIn(props) {\n  const history = useHistory();\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n\n  function loginUser(event) {\n    event.preventDefault();\n    props.setUsername(currentUsername);\n    history.push(\"/schedule\");\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoFocus\n            onChange={(evt) => setCurrentUsername(evt.target.value)}\n            value={currentUsername}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={loginUser}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { Switch, Route, Link as RouterLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  Button,\n} from \"@material-ui/core\";\nimport {\n  makeStyles,\n  createTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport green from \"@material-ui/core/colors/green\";\nimport { useHistory } from \"react-router\";\nimport Schedule from \"./components/Schedule\";\nimport LogIn from \"./components/LogIn\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ffa177\",\n    },\n    secondary: {\n      main: green[\"A100\"],\n    },\n  },\n});\n\nfunction App() {\n  const history = useHistory();\n  const [username, setUsername] = useState();\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      marginBottom: theme.spacing(2),\n    },\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\n  const classes = useStyles();\n\n  if (!username) {\n    history.push(\"/login\");\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <ScheduleIcon className={classes.icon} />\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Melon Tasting Scheduler\n          </Typography>\n          <Button to=\"/schedule\" component={RouterLink} color=\"inherit\">\n            Schedule Tasting\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route path=\"/schedule\">\n          <Schedule username={username} />\n        </Route>\n        <Route path=\"/login\">\n          <LogIn setUsername={setUsername} />\n        </Route>\n        <>\n          <Typography variant=\"h3\">Welcome, {username}!</Typography>\n        </>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}